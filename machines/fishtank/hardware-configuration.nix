# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/316afddc-10ff-409d-ab9d-de2459e569d3";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/391C-C7AF";
    fsType = "vfat";
  };

  fileSystems."/srv/tanka" = {
    device = "/dev/disk/by-label/tanka";
    fsType = "ext4";
  };

  fileSystems."/srv/tankb" = {
    device = "/dev/disk/by-label/tankb";
    fsType = "ext4";
  };

  boot.initrd.availableKernelModules = [ "ahci" "xhci_pci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "pcie_aspm=force" ];
  boot.initrd.postDeviceCommands = ''
    echo 1 > /sys/devices/pci0000:00/0000:00:13.2/0000:03:00.0/link/l1_aspm
  '';

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
